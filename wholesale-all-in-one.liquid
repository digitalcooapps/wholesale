{% comment %}
CURRENT VERSION: 2.3.6
LAST EDITED: May 08
{% endcomment %}

{% liquid
    assign products_per_page = 12
    assign products_per_search = 12
    assign ws_general_settings = shop.metafields.waioSettings.general_settings
    assign ws_selected_variant = product.selected_or_first_available_variant.id
    assign ws_selected_variant_price = product.selected_or_first_available_variant.price
%}

{% liquid
    assign products_with_collections = '['
    for item in cart.items
        for collection in item.product.collections
            assign products_with_collections = products_with_collections | append: '{collection_id:"' | append: collection.id | append: '",product_id:"' | append: item.product.id | append: '"' | append: ',product_handle:"' | append: item.product.handle | append: '"},'
        endfor
    endfor
    assign products_with_collections = products_with_collections | append: ']'
%}

{% liquid
    assign product_in_collects = '['
    assign products_in_collection = '['
    if template.name == 'product'
        for collection in product.collections
            assign product_in_collects = product_in_collects | append: '{collection_id:"' | append: collection.id | append: '",product_id:"' | append: product.id | append: '"' | append: ',product_handle:"' | append: product.handle | append: '"},'
        endfor
    else
        if template.name == 'search'
            paginate search.results by products_per_search
                for product in search.results
                    assign first_available_variant = product.first_available_variant | json
                    if product.available == false
                    assign first_available_variant = "{}"
                    endif
                    assign products_in_collection = products_in_collection | append: '{id:"' | append: product.id | append: '",handle:"' | append: product.handle | append: '"' | append: ',title:"' | append: product.title | append: '"' | append: ',available:"' | append: product.available | append: '"' | append: ',first_available_variant:' | append: first_available_variant | append: '},'
                    for collection in product.collections
                        assign product_in_collects = product_in_collects | append: '{collection_id:"' | append: collection.id | append: '",product_id:"' | append: product.id | append: '"' | append: ',product_handle:"' | append: product.handle | append: '"},'
                    endfor
                endfor
            endpaginate
        else
            if template.name == 'collection'
                paginate collection.products by products_per_page
                    for product in collection.products
                        assign first_available_variant = product.first_available_variant | json
                        if product.available == false
                        assign first_available_variant = "{}"
                        endif
                        assign products_in_collection = products_in_collection | append: '{id:"' | append: product.id | append: '",handle:"' | append: product.handle | append: '"' | append: ',title:"' | append: product.title | append: '"' | append: ',available:"' | append: product.available | append: '"' | append: ',first_available_variant:' | append: first_available_variant | append: '},'
                        for collection in product.collections
                            assign product_in_collects = product_in_collects | append: '{collection_id:"' | append: collection.id | append: '",product_id:"' | append: product.id | append: '"' | append: ',product_handle:"' | append: product.handle | append: '"},'
                        endfor
                    endfor
                endpaginate
            endif
        endif
    endif
    assign product_in_collects = product_in_collects | append: ']'
    assign products_in_collection = products_in_collection | append: ']'
    assign ws_discount_code_field_name = 'wsaio--discount-code-field'
    assign ws_discount_code_field_btn = 'wsaio--discount-code-btn'
%}

{% comment %} 
    ---> FOR DEVELOPERS <---
    -> wholesale price by application will be replaced with %regular_price%
    -> wholesale compare at price by application will be replaced with %compare_at_price%
    -> wholesale saved amount will be replaced with %saved_amount:percentage% OR %saved_amount:price%
    -> wholesale cart page (Total saved amount) will be replaced with %cart_saved_amount%
{% endcomment %}

{% comment %} Cart page HTML {% endcomment %}
{%- capture cart_subtotal_price_html -%}
<span class="cart__subtotal h3"> %regular_price% </span>
<s> %compare_at_price% </s>
{%- endcapture -%}

{%- capture cart_item_total_price_html -%}
<span class="visually-hidden">Regular price</span>
<s>%compare_at_price%</s>
<span class="visually-hidden">Sale price</span>
<span class="order-discount">%regular_price%</span>
{%- endcapture -%}

{%- capture cart_item_price_html -%}
    <span class="visually-hidden">Regular price</span>
    <s>%compare_at_price%</s>
    <span class="visually-hidden">Sale price</span>
    <span class="order-discount">%regular_price%</span>
{%- endcapture -%}

{% comment %} Product page HTML {% endcomment %}
{%- capture product_price_html -%}
<span id="ComparePriceA11y" class="visually-hidden" aria-hidden="false">Sale price</span>
<span id="ProductPrice" class="product-single__price product-single__price--on-sale" itemprop="price" content="20.0">%regular_price%</span>
<span id="PriceA11y" class="visually-hidden" aria-hidden="false">Regular price</span>
<s class="product-single__price--compare" id="ComparePrice">%compare_at_price%</s>
{%- endcapture -%}

{% comment %} Home, search, related products and collection page HTML {% endcomment %}
{%- capture hcsr_price_html -%}
<div class="product__prices text-center">
  <span class="product__price--on-sale">
    %regular_price%
  </span>
  <span class="visually-hidden">Regular price</span>
  <s>%compare_at_price%</s>    
  <span class="badge badge--sale"><span>Sale</span></span>
</div>
{%- endcapture -%}

{%- capture cart_bulk_saving_html -%}
<div class="cart--bulk-savings">
You saved %saved_amount% by buying bulk
</div>
{%- endcapture -%}

{%- capture hcsr_qb_price_html -%}
<div class="product__prices text-center">
  <span class="product__price--on-sale">
    On Sale from %regular_price%
  </span>
  <span class="visually-hidden">Sale price</span>
  <span class="badge badge--sale"><span>Sale</span></span>
    <s>%compare_at_price%</s>
</div>
{%- endcapture -%}

{%- capture discount_code_form_html -%}
<span class="wsaio--coupon-code-form">
    <input type="text" name="{{ws_discount_code_field_name}}" placeholder="Discount code"/>
    <button name="{{ws_discount_code_field_btn}}" class="btn wsaio--coupon-code-button">Apply</button>
</span>
{%- endcapture -%}

{% comment %} For shipping message from app, use %message% variable to show message on specific location {% endcomment %}
{%- capture shipping_message_html -%}
<div class="ws--shipping-message">%message%</div>
{%- endcapture -%}

{%- capture saved_price_html -%}
<div class="ws-saved-badge">
    %saved_amount:percentage%
    <br>
    %saved_amount:price%
</div>
{%- endcapture -%}

{%- capture saved_price_in_grid_html -%}
<div class="ws-saved-badge">
    %saved_amount:percentage%
    <br>
    %saved_amount:price%
</div>
{%- endcapture -%}

{%- capture buy_now_button_html -%}
<div data-shopify="payment-button" class="shopify-payment-button"><div><div><div><button type="button" class="shopify-payment-button__button shopify-payment-button__button--unbranded _2ogcW-Q9I-rgsSkNbRiJzA _2EiMjnumZ6FVtlC7RViKtj _2-dUletcCZ2ZL1aaH0GXxT" data-testid="Checkout-button">Buy it now</button><button aria-disabled="true" aria-hidden="true" class="shopify-payment-button__more-options _2ogcW-Q9I-rgsSkNbRiJzA shopify-payment-button__button--hidden" type="button" data-testid="sheet-open-button">More payment options</button></div></div></div></div>
{%- endcapture -%}

<script>
    if(typeof window.WSAIO === 'undefined') window.WSAIO = {};
    WSAIO.log = "info";
    WSAIO.errorLog = "error";
    WSAIO.disable_logs_when_live = true;
    WSAIO.template = "{{template.name}}";
    WSAIO.landingTemplate = "{{template.name}}";
    WSAIO.selector = {}; WSAIO.translation = {};
    WSAIO.customer = {
        id: {{customer.id|json}},
        tags: {{customer.tags | downcase | json}},
        tax_exempt: {{ customer.tax_exempt | json }},
        total_spent: {{ customer.total_spent | json }},
        orders_count: {{ customer.orders_count | json }},
        name: {{ customer.name | json }},
        email: {{ customer.email | json }},
    };
    WSAIO.shopInfo = {
        "money_format": {{ shop.money_format | json }},
        "currency": {{ shop.currency | json }},
        "domain" : {{shop.domain | json }},
        "shop" : {{shop.permanent_domain | json }},
    };
    WSAIO.frontpage_collection = {
        handle: "{{ collections.frontpage.handle }}",
        id: "{{ collections.frontpage.id }}",
    };
    WSAIO.cart_object = {{ cart|json }};
    {% comment %} WSAIO.current_product = {{ product | json }};
    WSAIO.current_variant = {{ product.selected_or_first_available_variant | json }}; {% endcomment %}
    WSAIO.wsaiovd = {{ shop.metafields.wsaiovd | json }};
    WSAIO.wsaiord = {{ shop.metafields.wsaiord | json }};
    WSAIO.signup_form = {{ shop.metafields.waioForms.waio-forms-key | json }};
    WSAIO.volume_discounts = [];
    WSAIO.regular_discounts = [];
    WSAIO.App = {};
    WSAIO.App.url = "https://wholesales.digitalcoo.com";
    WSAIO.App.version = "2.3.6";
    WSAIO.App.lastUpdated = "May 08, 2020";
    WSAIO.volume_discounts = WSAIO.volume_discounts.concat(Object.keys(WSAIO.wsaiovd).map(function(a){return WSAIO.wsaiovd[a]}));
    WSAIO.regular_discounts = WSAIO.regular_discounts.concat(Object.keys(WSAIO.wsaiord).map(function(a){return WSAIO.wsaiord[a]}));
    WSAIO.selected_product = {
        id: {{product.id | json }},
        handle: {{ product.handle | json }}
    };
    WSAIO.selected_variant = {
        id: {{product.selected_or_first_available_variant.id|json}},
        sku: {{product.selected_or_first_available_variant.sku|json}},
        price: {{product.selected_or_first_available_variant.price|json}},
        compare_at_price: {{product.selected_or_first_available_variant.compare_at_price|json}}
    };
    WSAIO.current_product = {
        id: {{product.id | json }},
        handle: {{ product.handle | json }}
    };
    WSAIO.current_variant = {
        id: {{product.selected_or_first_available_variant.id|json}},
        sku: {{product.selected_or_first_available_variant.sku|json}},
        price: {{product.selected_or_first_available_variant.price|json}},
        compare_at_price: {{product.selected_or_first_available_variant.compare_at_price|json}}
    };
    WSAIO.selected_collection = {
        id: {{collection.id | json }},
        handle: {{ collection.handle | json }}
    };
    WSAIO.current_collection = {
        id: {{collection.id | json }},
        handle: {{ collection.handle | json }}
    };
    WSAIO.buy_now_product = {{ product | json }};
    try{
        WSAIO.general_settings = {{ws_general_settings|json}};
        WSAIO.general_settings = JSON.parse(WSAIO.general_settings);
        if(typeof WSAIO.general_settings.settings !== "undefined"){
            WSAIO.general_settings = WSAIO.general_settings.settings;
        }
    }catch(e){console.error(e)}
    WSAIO.app_mode = WSAIO.general_settings.app_mode || "test";
    WSAIO.user_mode = localStorage.getItem("wsaio-app-mode") || "live";

    WSAIO.product_in_collects = {{product_in_collects}};
    WSAIO.products_in_collection = {{products_in_collection}};// Only for collection template
    WSAIO.products_with_collections = {{products_with_collections}};
    WSAIO.cart_subtotal_price_html = {{ cart_subtotal_price_html | strip_newlines | json }};
    WSAIO.cart_item_total_price_html = {{ cart_item_total_price_html | strip_newlines | json }};
    WSAIO.cart_item_price_html = {{ cart_item_price_html |strip_newlines | json }};
    WSAIO.product_price_html = {{ product_price_html | strip_newlines | json }};
    WSAIO.hcsr_price_html = {{ hcsr_price_html | strip_newlines | json }};
    WSAIO.cart_bulk_saving_html = {{ cart_bulk_saving_html | strip_newlines | json }};
    WSAIO.hcsr_qb_price_html = {{ hcsr_qb_price_html | strip_newlines | json }};
    WSAIO.shipping_message_html = {{ shipping_message_html | strip_newlines | json }};
    WSAIO.discount_code_form_html = {{ discount_code_form_html | strip_newlines | json }};
    WSAIO.saved_price_html = {{ saved_price_html | strip_newlines | json }};
    WSAIO.saved_price_in_grid_html = {{ saved_price_in_grid_html | strip_newlines | json }};
    WSAIO.buy_now_button_html = {{ buy_now_button_html | json }}
    
    WSAIO.translation = {
        "discount": "Discount",
        "buy": "Buy",
        "price": "Price per item",
        "quantity": "Quantity",
        "off": " Off",
        "from": "From ",
        "minimum_quantity": "Minimum Qty",
        "maximum_quantity": "Maximum Qty",
        "range_seperator": " to ",
        "each_item" : "",
        "range_so_on": " + "
    };

    WSAIO.shopify_payment_button_wrapper = '.shopify-payment-button';
    WSAIO.buy_now_button_selector = '.shopify-payment-button__button';
    WSAIO.signup_form_selector = '.wholesale-all-in-one-registration-form';
    WSAIO.currency_selector = '[name*="currencies"],[id*="currencies"]';
    WSAIO.cart_qty_change_selector = '[name="updates[]"]';
    WSAIO.product_qb_table_selector = 'form[action="/cart/add"]:after';
    WSAIO.checkout_selector = '[name*=checkout]';
    WSAIO.subtotal_selector = '.wsaio--subtotal:same';
    WSAIO.cart_item_total_selector = '.ws-item-total-price-%key%:same';
    WSAIO.cart_item_price_selector = '.ws-item-price-%key%:same';
    WSAIO.cart_bulk_saving_selector = '.ws--total-saving:same';
    WSAIO.product_id_selector = '.wsaio-pid-%id%:same';
    WSAIO.product_saved_amount_selector = '.saved_price-%id%:same';
    WSAIO.shipping_message_selector = '.wsaio--shiping-msg:same';
    WSAIO.discount_code_field_selector = '.discount-code-form:same';
    WSAIO.discount_code_alerts_selector = '.discount-code-alerts:same';
    WSAIO.discount_code_field_name = {{ws_discount_code_field_name|json}};
    WSAIO.discount_code_field_btn = {{ws_discount_code_field_btn|json}};
    WSAIO.discount_code_error_message = '<span style="color:red;">Discount code is invalid</span>';//string or html
    WSAIO.discount_code_success_message = '<span style="color:green;">Accepted! Discounts calculated at checkout</span>';//string or html
    
    // This message is only display when applied discount code is for once customer, but customer is not logged in. We force customer to login first to get discount if applicable
    WSAIO.discount_code_customer_login_message = '<span style="color:orange;">Login to get discount</span>';//string or html

    WSAIO.callback = function(response){
        if(response && response.shipping){
            WSAIO.applied_shipping = response.shipping;
            if(WSAIO.applied_shipping.apply_shipping_charges){//check if shipping applied
                if(true===WSAIO.general_settings.enable_additional_coupon_code){
                    WSAIO.DiscountCode.addForm();
                    WSAIO.DiscountCode.subscribe("click");// subscribe on click event
                }
            }
        }
        if(response && Number(response.wholesale_total_discount) > 0){
            if(true===WSAIO.general_settings.enable_additional_coupon_code){
                WSAIO.DiscountCode.addForm();
                WSAIO.DiscountCode.subscribe("click");// subscribe on click event
            }
        }
      
      if(response && response.checkout_price_from_total_price){
        var subtotal = response.checkout_price_from_total_price;
        if(typeof subtotal === "string"){
          subtotal = subtotal.replace(".","");
        }
        waioMOC.cart.original_total_price = subtotal;
        WholesaleAllInOne.order_control();
      }

    };

</script>

{{ 'wholesale-all-in-one.min.js' | asset_url | script_tag }}
{% include 'wholesale-all-in-one-extra' %}

{% comment %} Style(css) for wholesale all in one {% endcomment %}
<style>.ws--preview-bar-btn{position:relative;-webkit-box-sizing:border-box;box-sizing:border-box;display:inline-block;height:auto;margin:0;background:inherit;border:0;border-radius:inherit;font-family:inherit;font-weight:400;cursor:pointer;text-transform:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;vertical-align:middle;-webkit-appearance:none;-moz-appearance:none;appearance:none;padding:.4rem 1.5rem;background:-webkit-gradient(linear,left top,left bottom,from(white),to(#f9fafb));background:linear-gradient(to bottom,#fff,#f9fafb);border:1px solid #c4cdd5;-webkit-box-shadow:0 1px 0 0 rgba(22,29,37,.05);box-shadow:0 1px 0 0 rgba(22,29,37,.05);border-radius:3px;font-size:1rem;line-height:1rem;color:#212b36;-webkit-transition-property:background,border,-webkit-box-shadow;transition-property:background,border,-webkit-box-shadow;transition-property:background,border,box-shadow;transition-property:background,border,box-shadow,-webkit-box-shadow;-webkit-transition-timing-function:cubic-bezier(.64,0,.35,1);transition-timing-function:cubic-bezier(.64,0,.35,1);-webkit-transition-duration:.2s;transition-duration:.2s;-webkit-tap-highlight-color:transparent;opacity:1}
.ws-error {border-color: red !important;border: 1px solid !important;}.ws-success {border-color: green !important;border: 1px solid !important;}.checkout-disabled {pointer-events: none;}
</style>

{% comment %} For variant change {% endcomment %}
{% if template.name == 'product' or template.name == 'index' %}
{{ 'waio-option-selection.js' | asset_url | script_tag }}
{% endif %}